apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
  name: ml-pipeline
  namespace: kubeflow
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
  name: ml-pipeline
  namespace: kubeflow
rules:
- apiGroups:
  - argoproj.io
  resources:
  - workflows
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - kubeflow.org
  resources:
  - scheduledworkflows
  verbs:
  - create
  - get
  - list
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
  name: ml-pipeline
  namespace: kubeflow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ml-pipeline
subjects:
- kind: ServiceAccount
  name: ml-pipeline
  namespace: kubeflow
---
apiVersion: v1
data:
  config.json: |
    {
      "DBConfig": {
        "DriverName": "mysql",
        "DataSourceName": "",
        "DBName": "mlpipeline"
      },
      "ObjectStoreConfig":{
        "AccessKey": "minio",
        "SecretAccessKey": "minio123",
        "BucketName": "mlpipeline"
      },
      "InitConnectionTimeout": "6m",
      "DefaultPipelineRunnerServiceAccount": "pipeline-runner",
      "ML_PIPELINE_VISUALIZATIONSERVER_SERVICE_HOST": "ml-pipeline-ml-pipeline-visualizationserver",
      "ML_PIPELINE_VISUALIZATIONSERVER_SERVICE_PORT": 8888
    }
kind: ConfigMap
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
  name: ml-pipeline-config
  namespace: kubeflow
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
  name: ml-pipeline
  namespace: kubeflow
spec:
  ports:
  - name: http
    port: 8888
    protocol: TCP
    targetPort: 8888
  - name: grpc
    port: 8887
    protocol: TCP
    targetPort: 8887
  selector:
    app: ml-pipeline
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ml-pipeline
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
  name: ml-pipeline
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: ml-pipeline
      app.kubernetes.io/component: api-service
      app.kubernetes.io/instance: api-service-0.1.31
      app.kubernetes.io/managed-by: kfctl
      app.kubernetes.io/name: api-service
      app.kubernetes.io/part-of: kubeflow
      app.kubernetes.io/version: 0.1.31
  template:
    metadata:
      labels:
        app: ml-pipeline
        app.kubernetes.io/component: api-service
        app.kubernetes.io/instance: api-service-0.1.31
        app.kubernetes.io/managed-by: kfctl
        app.kubernetes.io/name: api-service
        app.kubernetes.io/part-of: kubeflow
        app.kubernetes.io/version: 0.1.31
    spec:
      containers:
      - command:
        - apiserver
        - --config=/etc/ml-pipeline-config
        - --sampleconfig=/config/sample_config.json
        - -logtostderr=true
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/ml-pipeline/api-server:0.1.31
        imagePullPolicy: IfNotPresent
        name: ml-pipeline-api-server
        ports:
        - containerPort: 8888
        - containerPort: 8887
        volumeMounts:
        - mountPath: /etc/ml-pipeline-config
          name: config-volume
      serviceAccountName: ml-pipeline
      volumes:
      - configMap:
          name: ml-pipeline-config
        name: config-volume
---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  labels:
    app.kubernetes.io/component: api-service
    app.kubernetes.io/instance: api-service-0.1.31
    app.kubernetes.io/managed-by: kfctl
    app.kubernetes.io/name: api-service
    app.kubernetes.io/part-of: kubeflow
    app.kubernetes.io/version: 0.1.31
  name: api-service
  namespace: kubeflow
spec:
  addOwnerRef: true
  componentKinds:
  - group: core
    kind: ConfigMap
  - group: apps
    kind: Deployment
  descriptor:
    description: ""
    keywords:
    - api-service
    - kubeflow
    links:
    - description: About
      url: ""
    maintainers: []
    owners: []
    type: api-service
    version: v1beta1
  selector:
    matchLabels:
      app.kubernetes.io/component: api-service
      app.kubernetes.io/instance: api-service-0.1.31
      app.kubernetes.io/managed-by: kfctl
      app.kubernetes.io/name: api-service
      app.kubernetes.io/part-of: kubeflow
      app.kubernetes.io/version: 0.1.31
